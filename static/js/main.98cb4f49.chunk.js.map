{"version":3,"sources":["store/TodoReducer.js","components/List.jsx","components/addNewTaskForm.jsx","App.jsx","store/index.js","index.js"],"names":["initialState","list","taskName","coordinator","isDone","currentSelectTask","ListContainer","connect","state","TodoReducer","selectTask","changeStatus","id","type","setPreviewSelectTask","className","map","el","i","cn","style","textDecoration","onClick","e","stopPropagation","setPreviewTask","width","height","viewBox","xmlSpace","d","AddNewTaskForm","props","handleSubmit","onSubmit","Field","name","component","placeholder","reduxForm","form","onSubmitSuccess","result","dispatch","reset","NewTaskForm","submit","values","firstName","addTask","this","Component","value","App","React","reducers","combineReducers","action","element","index","newTask","formReducer","ReactDOM","render","store","createStore","document","getElementById"],"mappings":"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","file":"static/js/main.98cb4f49.chunk.js","sourcesContent":["const CHANGE_STATUS = \"CHANGE_STATUS\";\r\nconst SET_PREVIEW_TASK = \"SET_PREVIEW_TASK\";\r\nconst ADD_TASK = \"ADD_TASK\";\r\n\r\nconst initialState = {    \r\n    list: [\r\n        {           \r\n            taskName: \"Строим интерфейс по вводу документов\",\r\n            coordinator: \"Петров П.П.\",\r\n            isDone: false,            \r\n        },\r\n        {            \r\n            taskName: \"Строим интерфейс по вводу документов 2\",\r\n            coordinator: \"Иванов И.И.\",\r\n            isDone: false,            \r\n        },\r\n        {            \r\n            taskName: \"Строим интерфейс по вводу документов 3\",\r\n            coordinator: \"Сидоров С.С.\",\r\n            isDone: false,            \r\n        },\r\n        {            \r\n            taskName: \"Строим интерфейс по вводу документов 4\",\r\n            coordinator: \"Петров П.П.\",\r\n            isDone: false,            \r\n        },        \r\n    ], \r\n    currentSelectTask: null,    \r\n}\r\n\r\nexport const TodoReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case \"CHANGE_STATUS\":\r\n            return { ...state,\r\n                list: state.list.map((element, index) => {\r\n                        if (index === action.id) {\r\n                            return {...element,\r\n                                isDone: !element.isDone\r\n                            }\r\n                        } else return element;\r\n                    })                                      \r\n            };\r\n        case \"SET_PREVIEW_TASK\":\r\n            return { ...state,  \r\n                currentSelectTask: state.currentSelectTask === action.id ? null : action.id,                                   \r\n            };\r\n        case \"ADD_TASK\":\r\n            const newTask = {\r\n                taskName: action.value,\r\n                coordinator: \"Инпутов И.И.\",\r\n                isDone: false,               \r\n            } \r\n            return { ...state,  \r\n                list: [...state.list, newTask]                                   \r\n            };\r\n        default:\r\n            return state;}        \r\n}\r\n\r\nexport const addTask = (value) => ({type: ADD_TASK, value});\r\nexport const changeStatus = (id) => ({type: CHANGE_STATUS, id});\r\nexport const setPreviewSelectTask = (id) => ({type: SET_PREVIEW_TASK, id});\r\n\r\n","import { connect } from \"react-redux\";\r\nimport { changeStatus, setPreviewSelectTask } from \"../store/TodoReducer\";\r\nimport cn from \"classnames\";\r\n\r\nconst List = ({ list, changeStatus, setPreviewSelectTask, selectTask }) => {\r\n \r\n    const setPreviewTask = (e,i) => {\r\n        e.stopPropagation();\r\n        setPreviewSelectTask(i);\r\n    }\r\n    return <div className = \"wrapper-tasks\">\r\n                <div className = \"list-tasks\">\r\n                    {list.map((el, i) => {\r\n                        return <div className = { i === selectTask ? cn(\"selectTask\", \"task\") : \"task\"}\r\n                                    style = {{textDecoration: el.isDone && \"line-through\"}}                                    \r\n                                    key = { i } \r\n                                    onClick = { () => changeStatus(i) }>\r\n                                    <span>#{ i+1 }. { el.taskName }</span>\r\n                                    <span>{ el.coordinator }</span>\r\n                                    <div></div>\r\n                                    <div></div>\r\n                                    <div onClick = { (e) => setPreviewTask(e, i) }>\r\n                                        <svg width = \"15px\" height = \"15px\" viewBox=\"0 0 480.026 480.026\" xmlSpace=\"preserve\"><path d=\"M475.922,229.325l-144-160c-3.072-3.392-7.36-5.312-11.904-5.312h-96c-6.304,0-12.032,3.712-14.624,9.472 c-2.56,5.792-1.504,12.544,2.72,17.216l134.368,149.312l-134.368,149.28c-4.224,4.704-5.312,11.456-2.72,17.216 c2.592,5.792,8.32,9.504,14.624,9.504h96c4.544,0,8.832-1.952,11.904-5.28l144-160 C481.394,244.653,481.394,235.373,475.922,229.325z\"/><path d=\"M267.922,229.325l-144-160c-3.072-3.392-7.36-5.312-11.904-5.312h-96c-6.304,0-12.032,3.712-14.624,9.472 c-2.56,5.792-1.504,12.544,2.72,17.216l134.368,149.312L4.114,389.293c-4.224,4.704-5.312,11.456-2.72,17.216\tc2.592,5.792,8.32,9.504,14.624,9.504h96c4.544,0,8.832-1.952,11.904-5.28l144-160\tC273.394,244.653,273.394,235.373,267.922,229.325z\"/></svg>\r\n                                    </div>                               \r\n                                </div>\r\n                    })}               \r\n                </div>\r\n                    { selectTask !== null ? <div className = \"description\">                                           \r\n                                                <p>{list[selectTask].taskName}</p>\r\n                                                <p>{list[selectTask].coordinator}</p>\r\n                                                <p>{list[selectTask].isDone ? \"Выполнено\" : \"Не выполнено\"}</p>\r\n                                            </div>\r\n                                          : null }\r\n            </div>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    list: state.TodoReducer.list,\r\n    selectTask: state.TodoReducer.currentSelectTask,\r\n})\r\n\r\nexport const ListContainer = connect(mapStateToProps, { changeStatus, setPreviewSelectTask })(List)","import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\nimport { addTask } from \"../store/TodoReducer\";\r\n\r\nlet AddNewTaskForm = props => {\r\n    const { handleSubmit } = props;\r\n    return <form onSubmit={ handleSubmit }>\r\n                <Field  name=\"firstName\" \r\n                        component=\"input\"\r\n                        type=\"text\"\r\n                        placeholder = \"Type...\" />\r\n                <button type=\"submit\">add ToDo</button>\r\n            </form>\r\n}\r\n\r\nAddNewTaskForm = reduxForm({ \r\n    form: \"newTaskForm\",\r\n    onSubmitSuccess:  (result, dispatch) => dispatch(reset(\"newTaskForm\"))\r\n})(AddNewTaskForm)\r\n\r\nclass NewTaskForm extends Component {\r\n    submit = values => {\r\n        values.firstName && this.props.addTask(values.firstName);\r\n    }\r\n    render(){\r\n        return <AddNewTaskForm onSubmit={ this.submit } {...this.props} />\r\n    }    \r\n}\r\n\r\nexport default NewTaskForm = connect( state => ({}), { addTask })(NewTaskForm)\r\n","import './App.css';\r\nimport React from \"react\";\r\nimport { ListContainer } from \"./components/List\";\r\nimport NewTaskForm from './components/addNewTaskForm';\r\n\r\nclass App extends React.Component{\t\r\n\trender(){\r\n\t\treturn \t<div className = \"container\">\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t\t<div></div>\r\n\t\t\t\t\t\t<div></div>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t<main>\r\n\t\t\t\t\t\t<NewTaskForm />\t\t\t\t\t\t\r\n\t\t\t\t\t\t<ListContainer />\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t</main>\r\n\t\t\t\t\t<footer></footer>\t\t\t\t\t\r\n\t\t\t\t</div>\t\t\r\n\t}\r\n}\r\n\r\nexport default App","import { createStore, combineReducers } from \"redux\";\r\nimport { TodoReducer } from \"./TodoReducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nconst reducers = combineReducers({\r\n    TodoReducer,\r\n    form: formReducer \r\n})\r\n\r\nexport function initStore() {\r\n    const initialStore = {};\r\n    return createStore(reducers, initialStore)\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { initStore } from './store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n\t<Provider store = { initStore() }>\t\t\r\n\t\t<App />\r\n  \t</Provider>,  \r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}